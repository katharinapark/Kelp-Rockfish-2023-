#Set the parameters for the weight-length conversion
# From Lea et al. 1999 Fish Bulletin 177
#Based on total length in mm
#W = .00000631 * TL ^ 3.14
weight_length_a <- 0.00000631
weight_length_b <- 3.14
#Set the working directory
dir <- file.path(here(),"pisco", "data")
setwd(dir)
#read in the csv files
FishLengths <- read.csv("FishLengths.csv")
luSite <- read.csv("luSite.csv")
luSpeciesCode <- read.csv("luSpeciesCode.csv")
Transects <- read.csv("Transects.csv")
#-------------------------------------------------------------------------------
#filter the observations to just the species of interest
FishLengths <- FishLengths %>%
dplyr::select(-X) %>%
filter(classcode == species)#,
#remove X - rownames column
Transects <- Transects %>% dplyr::select(-X)
luSite <- luSite %>% dplyr::select(-X) %>%
rename(site_side = site)
#collapse the number of fish by transect
species.data <- FishLengths %>%
dplyr::select(TransectID, count) %>% #later on convert to biomass here
group_by(TransectID) %>%
summarise(total_fish = sum(count))
#Merge to the transect data
species.transects <- left_join(Transects, species.data) %>%
mutate(total_fish = ifelse(is.na(total_fish), 0, total_fish)) #convert NA to 0
#merge in the sitelocation data
species.transects <- left_join(species.transects, luSite)
#look at summary species data before collapsing transects so you don't have to
#worry about effort here
#summary pivot tables
level_zone <-species.transects %>% filter(total_fish >0) %>%
group_by(level, zone) %>%
tally() %>%
pivot_wider(names_from = zone, values_from = n)
View(level_zone)
with(species.transects, table(level,zone))
View(Transects)
#look at just campus
species.transects %>% group_by(campus) %>% summarise(all_fish = sum(total_fish))
#not really any kelp rockfish in the canopy mid (CNMD) to remove that
#not many samples or fish in the keep - remove that
#investigate the MID samples further - not many
species.transects <- species.transects %>%
filter(!level == 'CNMD',
!zone == "DEEP")
#look at just campus
species.transects %>% group_by(campus) %>% summarise(all_fish = sum(total_fish))
#year and campus
year_campus <- species.transects %>% filter(total_fish >0) %>%
group_by(year, campus) %>%
tally() %>%
pivot_wider(names_from = campus, values_from = n)
View(year_campus)
#not really any samples from Vantuna VRG so remove
#UCSB very few samples from 1999-2002
#UCSC ramped up from 1999-2001
#keep just UCSC and UCSB for now
species.transects <- species.transects %>%
filter(!campus %in% c("VRG", "HSU"))
#look at month and year
year_month <- species.transects %>% filter(total_fish >0) %>%
mutate_at(vars(month), as.factor) %>%
group_by(year, month) %>%
tally() %>%
pivot_wider(names_from = month, values_from = n)
View(year_month)
#tally by year month to remove months rarely seeing kelp rockfish
month_tally <- species.transects %>% filter(total_fish >0) %>%
mutate_at(vars(month), as.factor) %>%
group_by(month) %>%
tally()
View(month_tally)
#keep months between 7 and 12
species.transects <- species.transects %>%
filter(month >6)
#look at general summaries
summary(as.factor(species.transects$month))
summary(as.factor(species.transects$year))  #1 NA
summary(as.factor(species.transects$day))
summary(as.factor(species.transects$zone))
summary(as.factor(species.transects$site_side))
summary(as.factor(species.transects$zone))
summary(as.factor(species.transects$site_side))
summary(as.factor(species.transects$vis)) #lots of NA's
summary(as.factor(species.transects$surge))  #lots of blanks
summary(as.factor(species.transects$depth)) #lots of NA's
summary(as.factor(species.transects$depth)) #lots of NA's
#off the bat remove any sites with "old" in the name
species.transects <- species.transects %>%
filter(!str_detect(site_side, '^OLD'))
#look at the sites by year
site_year <- species.transects %>%
group_by(site_side, campus, year) %>%
tally() %>%
pivot_wider(names_from = year, values_from = n)
View(site_year)
#get the number of years a site was sampled
site_year_sampled <- species.transects %>%
group_by(site_side) %>%
summarise(n_years = n_distinct(year))
View(site_year_sampled)
load("species.transects.collapsed.RData")
pisco <- species.transects.collapsed
lon_range <- c(-125,-117)
lat_range <- c(32.2, 42)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
#load libraries
library(dplyr)
library(tidyr)
library(tibble)
library(ggplot2)
library(nwfscSurvey)
library(here)
lon_range <- c(-125,-117)
lat_range <- c(32.2, 42)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
#### maps of count by year - needs work
ggplot() +
geom_point(data = pisco, aes(x = longitude, y = latitude, size = number.fish),
alpha = .5) +
scale_size_binned("Count", breaks = c(1, 5, 10, 25,  55)) +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
facet_wrap("campus", ncol = 4, nrow = 5)
#in sample 23 years is the max - keep sites for now sampled in at least 10 years
site_year_sampled_keep <- site_year_sampled %>%
filter(n_years>9)
species.transects <- species.transects %>%
filter(site_side %in% site_year_sampled_keep$site_side)
#now collapse transects sampled at the same level, site_side and day
#or else keep them separate and somehow ID them as replicates
species.transects.collapsed <- species.transects %>%
group_by(year, month, day, site_side, campus, zone,
level, CA_MPA_Name_Short, latitude, longitude,
site_designation, site_status) %>%
summarise(number.transects = n(),
number.fish = sum(total_fish)) %>%
mutate(cpue = number.fish/number.transects)
#assuming that each transect is equal - check if bottom and mid are the same volume
save(species.transects.collapsed, file = "species.transects.collapsed.RData")
#super noisy and messy
ggplot(species.transects.collapsed %>%
group_by(year, site_side, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_side),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, CA_MPA_Name_Short, site_status, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = CA_MPA_Name_Short),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus+site_status)
#super noisy and messy
ggplot(species.transects.collapsed %>%
group_by(year, site_side, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_side),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#super noisy and messy
ggplot(species.transects.collapsed %>%
group_by(year, site_side, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_side),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, CA_MPA_Name_Short, site_status, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = CA_MPA_Name_Short),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus+site_status)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, site_status, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_status)) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#in sample 23 years is the max - keep sites for now sampled in at least 10 years
site_year_sampled_keep <- site_year_sampled %>%
filter(n_years>9)
species.transects <- species.transects %>%
filter(site_side %in% site_year_sampled_keep$site_side)
#now collapse transects sampled at the same level, site_side and day
#or else keep them separate and somehow ID them as replicates
species.transects.collapsed <- species.transects %>%
group_by(year, month, day, site_side, campus, zone,
level, CA_MPA_Name_Short, latitude, longitude,
site_designation, site_status) %>%
summarise(number.transects = n(),
number.fish = sum(total_fish)) %>%
mutate(cpue = number.fish/number.transects)
#assuming that each transect is equal - check if bottom and mid are the same volume
save(species.transects.collapsed, file = "species.transects.collapsed.RData")
#super noisy and messy
ggplot(species.transects.collapsed %>%
group_by(year, site_side, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_side),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, CA_MPA_Name_Short, site_status, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = CA_MPA_Name_Short),
show.legend = FALSE) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus+site_status)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, site_status, campus) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_status)) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, site_status) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_status)) +
xlab("Year") + ylab("Average CPUE") +
facet_wrap(~campus)
#plot average cpue by mpa and designation
ggplot(species.transects.collapsed %>%
group_by(year, site_status) %>%
summarise(average_cpue = mean(cpue))) +
geom_line(aes(x = year, y = average_cpue, colour = site_status)) +
xlab("Year") + ylab("Average CPUE")
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
lon_range <- c(-125,-117)
lat_range <- c(32.2, 35)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
lon_range <- c(-121,-117)
lat_range <- c(32.2, 35)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
lon_range <- c(-121,-117)
lat_range <- c(33.2, 35)
ggplot() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = "right") +
xlab("Longitude") + ylab("Latitude") +
draw_theme() +
draw_projection() +
draw_land() +
draw_USEEZ(c(lon_range), c(lat_range)) +
geom_point(data = pisco, aes(x = longitude, y = latitude, color = CA_MPA_Name_Short,
shape = site_status),show.legend=FALSE ,
alpha = 1, size = 2)
View(Transects)
################################################################################
##  R script to look at PISCO data for kelp rockfish
##  Katharina Park
##  Combination of script from Emma Saas kelp rockfish and
##  Melissa Monk's gopher rockfish assessment
##
################################################################################
#Remove all variables and turn off open graphics
rm(list=ls(all=TRUE))
graphics.off()
#load libraries
library(dplyr)
library(tidyr)
library(tibble)
library(ggplot2)
library(stringr)
library(here)
#Set the species you want to work on
species <- "SATR"
#Set the minimum size for the the species that you want to keep
min_size <- 15
#Set the parameters for the weight-length conversion
# From Lea et al. 1999 Fish Bulletin 177
#Based on total length in mm
#W = .00000631 * TL ^ 3.14
weight_length_a <- 0.00000631
weight_length_b <- 3.14
#Set the working directory
dir <- file.path(here(),"pisco", "data")
setwd(dir)
#read in the csv files
FishLengths <- read.csv("FishLengths.csv")
luSite <- read.csv("luSite.csv")
luSpeciesCode <- read.csv("luSpeciesCode.csv")
Transects <- read.csv("Transects.csv")
#-------------------------------------------------------------------------------
#filter the observations to just the species of interest
FishLengths <- FishLengths %>%
dplyr::select(-X) %>%
filter(classcode == species)#,
#remove X - rownames column
Transects <- Transects %>% dplyr::select(-X)
luSite <- luSite %>% dplyr::select(-X) %>%
rename(site_side = site)
#collapse the number of fish by transect
species.data <- FishLengths %>%
dplyr::select(TransectID, count) %>% #later on convert to biomass here
group_by(TransectID) %>%
summarise(total_fish = sum(count))
View(species.data)
#Merge to the transect data
species.transects <- left_join(Transects, species.data) %>%
mutate(total_fish = ifelse(is.na(total_fish), 0, total_fish)) #convert NA to 0
View(species.transects)
View(Transects)
summary(as.factor(Transects$level))
summary(as.factor(species.transects$level))
View(Transects)
summary(Transects$year)
recdf <- read.csv(file = "Catch_Reconstruction_Recreational.csv")
library(ggplot2)
recdf$X <- NULL
recdf$X.1 <- NULL
recPC <- ggplot(data= recdf, aes(x=YEAR, y=CATCH.MT)) +
#Specifies that a line chart should be created
geom_line() +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction - PC Mode", x = "Year", y = "Catch in mt")
print(recPC)
recPR <- ggplot(data= recdf, aes(x=YEAR.1, y=CATCH.MT.1)) +
geom_line() +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction - PR Mode", x = "Year", y = "Catch in mt")
print(recPR)
View(recPC)
View(recdf)
recdf <- read.csv(file = "Catch_Reconstruction_Recreational.csv")
library(ggplot2)
ggplot(recdf, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line() +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
View(recdf)
ggplot(recdf, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 3) +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
ggplot(recdf, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 2) +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
# Read in commercial data
commercialdf <- read.csv(file = "Catch_Reconstruction_Commercial.csv")
View(commercialdf)
commercialdf$X <- NULL
colnames(commercialdf)[colnames(commercialdf) == "LANDED_WEIGHT_MTONS"] <- "Catch_mt"
commercial <- ggplot(data= commercialdf, aes(x=LANDING_YEAR, y=Catch_mt)) +
geom_line() +
labs(title = "Kelp Rockfish Commercial Catch Reconstruction CA", x = "Year", y = "Catch in mt") +
theme_minimal ()
print(commercial)
library(ggplot2)
recandcommercial <- ggplot()
####
commercialdf$MODE = "Com."
####
commercialdf$MODE = "Com"
catches <- rbind(recdf[, 1,3,2], commercialdf[,])
catches <- rbind(recdf[, 1,3,2], commercialdf[,1:3])
catches <- rbind(recdf[, 1,3,2], commercialdf[,1:3])
catches <- rbind(recdf[, c(1,3,2)], commercialdf[,1:3])
catches <- rbind(recdf[, c(1,3,2)], commercialdf[,1:3])
####
commercialdf <- commercialdf %>%
rename(YEAR = LANDING_YEAR,
CATCH.MT = Catch_mt) %>%
mutate(MODE = "COM")
####
library(dplyr)
commercialdf <- commercialdf %>%
rename(YEAR = LANDING_YEAR,
CATCH.MT = Catch_mt) %>%
mutate(MODE = "COM")
catches <- rbind(recdf[, c(1,3,2)], commercialdf[,1:3])
View(catches)
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 2) +
labs(title = "Kelp Rockfish Recreational Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 2) +
labs(title = "Kelp Rockfish Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 1) +
labs(title = "Kelp Rockfish Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 1) +
labs(title = "Kelp Rockfish Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_b()
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = 1) +
labs(title = "Kelp Rockfish Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
ggplot(catches, aes(x = YEAR, y = CATCH.MT, colour = as.factor(MODE))) +
geom_line(linewidth = .8) +
labs(title = "Kelp Rockfish Catch Reconstruction CA", x = "YEAR", y = "Catch in MT (Metric Tons)",
color = "Mode") +
scale_colour_viridis_d()
